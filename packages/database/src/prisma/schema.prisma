// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x", "darwin-arm64"]
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../../../docs/database-erd.svg"
}

datasource db {
  provider          = "sqlserver"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  firstName      String
  lastName       String
  memorableId    String    @unique
  profilePicture String?
  location       Location? @relation(fields: [locationId], references: [id])
  locationId     Int?
  groups         Group[]
  teams          Team[]
}

model Group {
  id           Int     @id @default(autoincrement())
  name         String  @unique
  groupPicture String?
  players      User[]
}

model Location {
  id             Int          @id @default(autoincrement())
  urlPath        String       @unique
  name           String
  availableGames GameType[]
  users          User[]
  gameResult     GameResult[]
}

model GameType {
  id           Int              @id @default(autoincrement())
  name         String           @unique
  locations    Location[]
  gameResults  GameResult[]
  requirements GameRequirement?
}

model GameRequirement {
  id                Int      @id @default(autoincrement())
  minNumberOfTeams  Int
  maxNumberOfTeams  Int
  minPlayersPerTeam Int
  maxPlayersPerTeam Int
  gameType          GameType @relation(fields: [gameTypeId], references: [id])
  gameTypeId        Int      @unique
}

model Team {
  id               Int          @id @default(autoincrement())
  cumulativeTeamId String       @unique
  players          User[]
  gameResults      GameResult[]
  wonGames         GameResult[] @relation("WinningTeamRelation")
}

model GameResult {
  id               Int       @id @default(autoincrement())
  teams            Team[]
  winningTeam      Team?     @relation(name: "WinningTeamRelation", fields: [winningTeamId], references: [cumulativeTeamId], onDelete: NoAction, onUpdate: NoAction)
  winningTeamId    String?
  gameType         GameType  @relation(fields: [gameTypeId], references: [id])
  gameTypeId       Int
  locationPlayed   Location  @relation(fields: [locationPlayedId], references: [id])
  locationPlayedId Int
  startTime        DateTime
  endTime          DateTime?
}
